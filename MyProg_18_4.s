; Вложенные подпрограммы. Сохранение и
; восстановление контекста
		area myROMdata, data, readonly, align = 4
;		       1.0, 0.33, 0.77, 1.33, 2.77
ROM_X    DCD 0x3F8147AE, 0x3EA8F5C3, 0x3F451EB8, 0x3FAA3D71
; Объявить кодовую секцию MyCode
				AREA MyCode, CODE, ReadOnly
; Объявить точку входа в программу приложения	
				ENTRY
; Объвить точку входа глобальной переменной
				EXPORT MyProg
MyProg
; Основная программа
; Число элементов исходного массива слов без знака
N				EQU		4
; 			...
; Передать параметры и вызвать подпрограмму копирования
; и сортировки массива слов без знака
				mov32   R0, ROM_X		; Адрес массива - источника
				LDR r1,=Array_DST		; Адрес массива - приемника
				MOV r2,#N					; Число слов в массиве
				BL Copy_Array_Sort
; Повторить для другого набора данных в исходном массиве
				B MyProg

;**********************************************************************
; Подпрограмма верхего уровня - копирование и сортировка массива
; слов без знака
; Входные переменные:
; r0 - начальный адрес массива-источника 
; r1 - начальный адрес массива-приемника
; r2 - число слов в массиве-источнике
; Используемые регистры: r3-r7 (во всех вложенных подпрограммах)
;***********************************************************************
Copy_Array_Sort
; Сохранить в стеке значения используемых регистров и регистра связи,
; так как в теле подпрограммы будут вложенные вызовы подпрограмм
				PUSH {r3-r7, lr}
; Передать параметры и вызвать подпрограмму копирования массива слов
				MOV r4,r0		; Начальный адрес массива-источника
				MOV r5,r1		; Начальный адерс массива-приемника
				MOV r6,r2		; Число элементов массива
; Вызвать подпрограмму копирования массива слов
				BL Copy_Array_Word
; Вызвать подпрограмму сортировки слов по убыванию в массиве-приемнике
				BL Sort_Array_Max_Min
; Восстановить значения использованных регистров из стека
; Возврат в основную программу
				POP{r3-r7, pc}
;***********************************************************************

;****************************************************************
; Подпрограмма копирования массива 32-разрядных слов 
; Входы:
; r4 - начальный адрес массива-источника
; r5 - начальный адрес массива-приемника
; r6 - число слов в массиве
; Используемые регистры:
; r7 – текущее копируемое слово данных
;****************************************************************
Copy_Array_Word
; Скопировать  очередное слово из массива-источника с 
; пост-авто-смещением указателя r4 на +4 (число байт в слове)
				LDR r7,[r4],#4
; Сохранить это слово в массиве-приемнике с пост-авто-смещением
; указателя r5 на +4 (число байт в слове)
				STR r7,[r5],#4
; Декрементировать счетчик числа скопированных слов
				SUBS r6,#1 	; Выставить флаги результата «S»
; Если не все элементы массива скопированы, повторить
				BNE Copy_Array_Word
; Массив скопирован, возврат в вызывающую программму
				BX lr
;****************************************************************

;****************************************************************
; Подпрограмма сортировки массива по убыванию значений
; Входы: 
; r1 - начальный адрес массива, подлежащего сортировке
; r2 - число элементов массива
; Используемые регистры:
; r3 - указатель начального адреса очередной пары слов массива
; r4,r5 - регистры временного хранения очередной пары слов
; r6 - счетчик числа пар слов в массиве
; r7 - счетчик числа сканов массива
;****************************************************************
Sort_Array_Max_Min
; Инициализация счетчика числа проходов массива 
				SUB r7,r2,#1
Out_Loop				
	; Установить указатель r3 на начальный адрес массива
				MOV r3,r1
	; Инициализация счетчика числа числа пар чисел в массиве
				SUB r6,r2,#1
In_Loop	
	; Обработать очередную пару элементов массива
	; Получить очередную пару слов в регистры r4,r5
				LDRD r4,r5,[r3]
	; Сравнить первое и второе слово в паре
				CMP r4,r5
	; Если первое слово "Выше или равно", сохранить порядок слов
				BHS Next
	; Поменять местами элементы массива в текущей паре
				STRD r5,r4,[r3]
Next
	; Переместить указатель на следующую пару элементов массива 
				ADD r3,#4
	; Декрементировать счетчик числа пар элементов массива
				SUBS r6,#1
	; Если не все пары элементов массива обработаны – повторить
	; внутренний цикл
				BNE In_Loop
; Декрементировать счетчик числа сканов массива
				SUBS r7,#1
; Если не все сканы выполнены, повторить
				BNE Out_Loop
; Сортировка элементов массива выполнена, возврат в вызывающую 
; программу
				BL loop
;****************************************************************

loop
				BL loop

; Объявить секцию данных в оперативной памяти и зарезервировать место
; для массива- источника и массива-приемника данных
					ALIGN				; Выровнять по границе полного слова
					AREA MyData, DATA, ReadWrite
Array_DST SPACE N*4
	
; Конец ассемблерного текста
				END